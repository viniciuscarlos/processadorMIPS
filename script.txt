SCRIPT

Instruções que vem da memória de instruçoes
0000 soma
0010 subtraçao
1000 multiplicação
1010 divisão
--

Intruçoes que vai para ALU
00 soma
01 sub
10 mult
11 div

-------------------------------------------------

TESTES

Operação em hexadecimal

20020002 20030005 20040006 80642828 88A3482A 88A25022 AC050004 8C060004 80A33820 88834022 FFFFFFFF

80642828


Código em binário 

------------------------------------------------
0010 0000 0000 0010 0000 0000 0000 0010 - addi
0010 0000 0000 0011 0000 0000 0000 0101 - addi
0010 0000 0000 0100 0000 0000 0000 0110 - addi
1000 0000 0110 0100 0010 1000 0010 1000 - mult
1000 1000 1010 0011 0100 1000 0010 1010 - div
1010 1100 0000 0101 0000 0000 0000 0100 - sw
1000 1100 0000 0110 0000 0000 0000 0100 - lw
1000 0000 1000 0011 0011 1000 0010 0000 - add
1000 1000 1000 0011 0100 0000 0010 0010 - sub
1111 1111 1111 1111 1111 1111 1111 1111 - exit
------------------------------------------------

Instrução MIPS Assembly
addi $2, $0, 2
addi $3, $0, 5
addi $4, $0, 6
mult $5, $3, $4
div $9, $5, $3
sw $5, 4($0)
lw $6 4($0)
add $7, $5, $3
sub $8, $4, $3
exit

Valores esperados nos registradores:
$2 = 2
$3 = 5
$4 = 6
$5 = 1E (5 x 6 = 30 em decimal)
$7 = 23 (1E + 5 = 35 em decimal)
$8 = 1 (6 - 5) 
$9 = 6 (30 / 5 em decimal)

============================================================================